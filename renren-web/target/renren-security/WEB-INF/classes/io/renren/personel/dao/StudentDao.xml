<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.personel.dao.StudentDao">

	<select id="queryObject" resultType="io.renren.personel.entity.StudentEntity">
		select * from pl_student where student_id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.personel.entity.StudentEntity">
		select s.*,
		(SELECT count(student_id) from c_course_record cr RIGHT JOIN c_course c on c.course_id=cr.course_id 
		where cr.student_id=s.student_id and c.status !=2)
		as courseNotEndNum,
		(SELECT count(student_id) from c_course_record cr RIGHT JOIN c_course c on c.course_id=cr.course_id 
		where cr.student_id=s.student_id and c.status =2)
		as courseEndNum
		from pl_student s
		<where>
			<if test="name != null and name.trim() != ''">
				and `name` like concat('%',#{name},'%') 
			</if>
		</where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by student_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from pl_student 
	</select>
	 
	<insert id="save" parameterType="io.renren.personel.entity.StudentEntity" useGeneratedKeys="true" keyProperty="studentId">
		insert into pl_student
		(
			`name`, 
			`school`, 
			`parent_tel`, 
			`address`, 
			`born`, 
			`sex`,
			`parent_name`, 
			`remarks`, 
			`kinskip`, 
			`study_way`
		)
		values
		(
			#{name}, 
			#{school}, 
			#{parentTel}, 
			#{address}, 
			#{born}, 
			#{sex},
			#{parentName}, 
			#{remarks}, 
			#{kinskip}, 
			#{studyWay}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.personel.entity.StudentEntity">
		update pl_student 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="school != null">`school` = #{school}, </if>
			<if test="parentTel != null">`parent_tel` = #{parentTel}, </if>
			<if test="address != null">`address` = #{address}, </if>
			<if test="lastUpdate != null">`last_update` = #{lastUpdate}, </if>
			<if test="born != null">`born` = #{born}, </if>
			<if test="sex != null">`sex` = #{sex}, </if>
			<if test="parentName != null">`parent_name` = #{parentName}, </if>
			<if test="remarks != null">`remarks` = #{remarks}, </if>
			<if test="kinskip != null">`kinskip` = #{kinskip}, </if>
			<if test="studyWay != null">`study_way` = #{studyWay}</if>
		</set>
		where student_id = #{studentId}
	</update>
	
	<delete id="delete">
		delete from pl_student where student_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from pl_student where student_id in 
		<foreach item="studentId" collection="array" open="(" separator="," close=")">
			#{studentId}
		</foreach>
	</delete>
	
	<select id="queryNamesInStudentIds" parameterType="java.util.List" resultType="java.lang.String">
		select s.name
		from pl_student s 
		where s.student_id in
		<foreach collection="studentIds" item="item" index="index"   
       		open="(" separator="," close=")">  
           	#{item} 
       	</foreach>
	</select>

</mapper>